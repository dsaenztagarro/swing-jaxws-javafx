
package hidrocon.webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HidroconWS", targetNamespace = "http://webservice.hidrocon/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HidroconWS {


    /**
     * 
     * @param route
     */
    @WebMethod
    @RequestWrapper(localName = "createRoute", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateRoute")
    @ResponseWrapper(localName = "createRouteResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateRouteResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/createRouteRequest", output = "http://webservice.hidrocon/HidroconWS/createRouteResponse")
    public void createRoute(
        @WebParam(name = "route", targetNamespace = "")
        Route route);

    /**
     * 
     * @param route
     */
    @WebMethod
    @RequestWrapper(localName = "updateRoute", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateRoute")
    @ResponseWrapper(localName = "updateRouteResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateRouteResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/updateRouteRequest", output = "http://webservice.hidrocon/HidroconWS/updateRouteResponse")
    public void updateRoute(
        @WebParam(name = "route", targetNamespace = "")
        Route route);

    /**
     * 
     * @param route
     */
    @WebMethod
    @RequestWrapper(localName = "deleteRoute", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteRoute")
    @ResponseWrapper(localName = "deleteRouteResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteRouteResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/deleteRouteRequest", output = "http://webservice.hidrocon/HidroconWS/deleteRouteResponse")
    public void deleteRoute(
        @WebParam(name = "route", targetNamespace = "")
        Route route);

    /**
     * 
     * @return
     *     returns java.util.List<hidrocon.webservice.RouteView>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllRoute", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllRoute")
    @ResponseWrapper(localName = "getAllRouteResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllRouteResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/getAllRouteRequest", output = "http://webservice.hidrocon/HidroconWS/getAllRouteResponse")
    public List<RouteView> getAllRoute();

    /**
     * 
     * @param neighbour
     */
    @WebMethod
    @RequestWrapper(localName = "updateNeighbour", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateNeighbour")
    @ResponseWrapper(localName = "updateNeighbourResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateNeighbourResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/updateNeighbourRequest", output = "http://webservice.hidrocon/HidroconWS/updateNeighbourResponse")
    public void updateNeighbour(
        @WebParam(name = "neighbour", targetNamespace = "")
        Neighbour neighbour);

    /**
     * 
     * @param neighbour
     */
    @WebMethod
    @RequestWrapper(localName = "createNeighbour", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateNeighbour")
    @ResponseWrapper(localName = "createNeighbourResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateNeighbourResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/createNeighbourRequest", output = "http://webservice.hidrocon/HidroconWS/createNeighbourResponse")
    public void createNeighbour(
        @WebParam(name = "neighbour", targetNamespace = "")
        Neighbour neighbour);

    /**
     * 
     * @param parameters
     * @return
     *     returns java.util.List<hidrocon.webservice.NeighbourMeterReadingView>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNeighbourMeterReadingList", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetNeighbourMeterReadingList")
    @ResponseWrapper(localName = "getNeighbourMeterReadingListResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetNeighbourMeterReadingListResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/getNeighbourMeterReadingListRequest", output = "http://webservice.hidrocon/HidroconWS/getNeighbourMeterReadingListResponse")
    public List<NeighbourMeterReadingView> getNeighbourMeterReadingList(
        @WebParam(name = "parameters", targetNamespace = "")
        HashMap parameters);

    /**
     * 
     * @return
     *     returns java.util.List<hidrocon.webservice.Comment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllComments", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllComments")
    @ResponseWrapper(localName = "getAllCommentsResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllCommentsResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/getAllCommentsRequest", output = "http://webservice.hidrocon/HidroconWS/getAllCommentsResponse")
    public List<Comment> getAllComments();

    /**
     * 
     * @param comment
     */
    @WebMethod
    @RequestWrapper(localName = "updateComment", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateComment")
    @ResponseWrapper(localName = "updateCommentResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateCommentResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/updateCommentRequest", output = "http://webservice.hidrocon/HidroconWS/updateCommentResponse")
    public void updateComment(
        @WebParam(name = "comment", targetNamespace = "")
        Comment comment);

    /**
     * 
     * @param comment
     */
    @WebMethod
    @RequestWrapper(localName = "deleteComment", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteComment")
    @ResponseWrapper(localName = "deleteCommentResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteCommentResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/deleteCommentRequest", output = "http://webservice.hidrocon/HidroconWS/deleteCommentResponse")
    public void deleteComment(
        @WebParam(name = "comment", targetNamespace = "")
        Comment comment);

    /**
     * 
     * @param neighbour
     */
    @WebMethod
    @RequestWrapper(localName = "deleteNeighbour", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteNeighbour")
    @ResponseWrapper(localName = "deleteNeighbourResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteNeighbourResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/deleteNeighbourRequest", output = "http://webservice.hidrocon/HidroconWS/deleteNeighbourResponse")
    public void deleteNeighbour(
        @WebParam(name = "neighbour", targetNamespace = "")
        Neighbour neighbour);

    /**
     * 
     * @return
     *     returns java.util.List<hidrocon.webservice.Comment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllRate", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllRate")
    @ResponseWrapper(localName = "getAllRateResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllRateResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/getAllRateRequest", output = "http://webservice.hidrocon/HidroconWS/getAllRateResponse")
    public List<Comment> getAllRate();

    /**
     * 
     * @param rate
     */
    @WebMethod
    @RequestWrapper(localName = "createRate", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateRate")
    @ResponseWrapper(localName = "createRateResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateRateResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/createRateRequest", output = "http://webservice.hidrocon/HidroconWS/createRateResponse")
    public void createRate(
        @WebParam(name = "rate", targetNamespace = "")
        Rate rate);

    /**
     * 
     * @param rate
     */
    @WebMethod
    @RequestWrapper(localName = "updateRate", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateRate")
    @ResponseWrapper(localName = "updateRateResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateRateResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/updateRateRequest", output = "http://webservice.hidrocon/HidroconWS/updateRateResponse")
    public void updateRate(
        @WebParam(name = "rate", targetNamespace = "")
        Rate rate);

    /**
     * 
     * @param rate
     */
    @WebMethod
    @RequestWrapper(localName = "deleteRate", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteRate")
    @ResponseWrapper(localName = "deleteRateResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteRateResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/deleteRateRequest", output = "http://webservice.hidrocon/HidroconWS/deleteRateResponse")
    public void deleteRate(
        @WebParam(name = "rate", targetNamespace = "")
        Rate rate);

    /**
     * 
     * @param routeId
     * @return
     *     returns java.util.List<hidrocon.webservice.RouteBuildingView>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRouteBuildingViewList", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetRouteBuildingViewList")
    @ResponseWrapper(localName = "getRouteBuildingViewListResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetRouteBuildingViewListResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/getRouteBuildingViewListRequest", output = "http://webservice.hidrocon/HidroconWS/getRouteBuildingViewListResponse")
    public List<RouteBuildingView> getRouteBuildingViewList(
        @WebParam(name = "routeId", targetNamespace = "")
        int routeId);

    /**
     * 
     * @param building
     * @return
     *     returns java.util.List<hidrocon.webservice.Neighbour>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "searchNeighbour", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.SearchNeighbour")
    @ResponseWrapper(localName = "searchNeighbourResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.SearchNeighbourResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/searchNeighbourRequest", output = "http://webservice.hidrocon/HidroconWS/searchNeighbourResponse")
    public List<Neighbour> searchNeighbour(
        @WebParam(name = "building", targetNamespace = "")
        Building building);

    /**
     * 
     * @param building
     */
    @WebMethod
    @RequestWrapper(localName = "createBuilding", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateBuilding")
    @ResponseWrapper(localName = "createBuildingResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateBuildingResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/createBuildingRequest", output = "http://webservice.hidrocon/HidroconWS/createBuildingResponse")
    public void createBuilding(
        @WebParam(name = "building", targetNamespace = "")
        Building building);

    /**
     * 
     * @param building
     */
    @WebMethod
    @RequestWrapper(localName = "updateBuilding", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateBuilding")
    @ResponseWrapper(localName = "updateBuildingResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateBuildingResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/updateBuildingRequest", output = "http://webservice.hidrocon/HidroconWS/updateBuildingResponse")
    public void updateBuilding(
        @WebParam(name = "building", targetNamespace = "")
        Building building);

    /**
     * 
     * @param building
     */
    @WebMethod
    @RequestWrapper(localName = "deleteBuilding", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteBuilding")
    @ResponseWrapper(localName = "deleteBuildingResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteBuildingResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/deleteBuildingRequest", output = "http://webservice.hidrocon/HidroconWS/deleteBuildingResponse")
    public void deleteBuilding(
        @WebParam(name = "building", targetNamespace = "")
        Building building);

    /**
     * 
     * @return
     *     returns java.util.List<hidrocon.webservice.Comment>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllBuilding", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllBuilding")
    @ResponseWrapper(localName = "getAllBuildingResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllBuildingResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/getAllBuildingRequest", output = "http://webservice.hidrocon/HidroconWS/getAllBuildingResponse")
    public List<Comment> getAllBuilding();

    /**
     * 
     * @param administrator
     */
    @WebMethod
    @RequestWrapper(localName = "createAdministrator", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateAdministrator")
    @ResponseWrapper(localName = "createAdministratorResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateAdministratorResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/createAdministratorRequest", output = "http://webservice.hidrocon/HidroconWS/createAdministratorResponse")
    public void createAdministrator(
        @WebParam(name = "administrator", targetNamespace = "")
        Administrator administrator);

    /**
     * 
     * @param administrator
     */
    @WebMethod
    @RequestWrapper(localName = "updateAdministrator", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateAdministrator")
    @ResponseWrapper(localName = "updateAdministratorResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.UpdateAdministratorResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/updateAdministratorRequest", output = "http://webservice.hidrocon/HidroconWS/updateAdministratorResponse")
    public void updateAdministrator(
        @WebParam(name = "administrator", targetNamespace = "")
        Administrator administrator);

    /**
     * 
     * @param administrator
     */
    @WebMethod
    @RequestWrapper(localName = "deleteAdministrator", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteAdministrator")
    @ResponseWrapper(localName = "deleteAdministratorResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.DeleteAdministratorResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/deleteAdministratorRequest", output = "http://webservice.hidrocon/HidroconWS/deleteAdministratorResponse")
    public void deleteAdministrator(
        @WebParam(name = "administrator", targetNamespace = "")
        Administrator administrator);

    /**
     * 
     * @return
     *     returns java.util.List<hidrocon.webservice.Administrator>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllAdministrators", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllAdministrators")
    @ResponseWrapper(localName = "getAllAdministratorsResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.GetAllAdministratorsResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/getAllAdministratorsRequest", output = "http://webservice.hidrocon/HidroconWS/getAllAdministratorsResponse")
    public List<Administrator> getAllAdministrators();

    /**
     * 
     * @param comment
     */
    @WebMethod
    @RequestWrapper(localName = "createComment", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateComment")
    @ResponseWrapper(localName = "createCommentResponse", targetNamespace = "http://webservice.hidrocon/", className = "hidrocon.webservice.CreateCommentResponse")
    @Action(input = "http://webservice.hidrocon/HidroconWS/createCommentRequest", output = "http://webservice.hidrocon/HidroconWS/createCommentResponse")
    public void createComment(
        @WebParam(name = "comment", targetNamespace = "")
        Comment comment);

}
