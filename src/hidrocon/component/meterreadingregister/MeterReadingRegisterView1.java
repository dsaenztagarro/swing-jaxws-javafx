/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MeterReadingRegisterView.java
 *
 * Created on 29-dic-2011, 23:08:37
 */
package hidrocon.component.meterreadingregister;

import hidrocon.HidroconView;
import hidrocon.component.meter.MeterReadingPanelView;
import hidrocon.component.neighbour.NeighbourPanelView;
import hidrocon.custom.button.section.HidroSaveButton;
import hidrocon.custom.button.toolbar.HidroExitButton;
import java.awt.Component;
import java.awt.Dimension;
import java.util.List;

/**
 *
 * @author David SÃ¡enz Tagarro
 */
public class MeterReadingRegisterView1 extends javax.swing.JPanel {

    HidroSaveButton saveButton;
    HidroExitButton exitButton;
    
    /** Creates new form MeterReadingRegisterView */
    public MeterReadingRegisterView1() {
        initComponents();
        /*setMinimumSize(new Dimension(900,100));
        setMaximumSize(new Dimension(900,100));
        setPreferredSize(new Dimension(900,100)); */
    }
    
    protected void customizeComponents() {
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(HidroconView.class);
        //Sections:
        //Details 1 panel:
                                
    }
    
	protected void initTopPanel() {
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(HidroconView.class);
		
		saveButton = new HidroSaveButton();
		exitButton = new HidroExitButton();
        		
		saveButton.setToolTipText(resourceMap.getString("neighbour.details.toolbar.savebutton.tooltip"));
		exitButton.setToolTipText(resourceMap.getString("neighbour.details.toolbar.exitbutton.tooltip"));
	}    

    /*public void revalidate() {
        if (meterContainer!=null){
            Component[] componentList = meterContainer.getComponents();
            for(int i=0; i<componentList.length; i++) {
                componentList[i].revalidate();
            }
            meterContainer.revalidate();
            super.revalidate();
        }
    }*/
    
    public void writeData(NeighbourPanelView neighbourPanelView, List<MeterReadingPanelView> componentList) {
        //this.removeAll();
        this.add(neighbourPanelView);
        if (componentList != null) {
            for (Component component : componentList) {
                //meterContainer.add(component);
                this.add(component);
            }
        }
        //meterContainer.revalidate();
        //this.revalidate();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        neighbourContainer = new hidrocon.custom.panel.HidroPanel();
        meterContainer = new hidrocon.custom.panel.HidroPanel();

        setMinimumSize(new java.awt.Dimension(100, 160));
        setName("Form"); // NOI18N
        setLayout(new java.awt.GridBagLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(MeterReadingRegisterView1.class);
        neighbourContainer.setBackground(resourceMap.getColor("neighbourContainer.background")); // NOI18N
        neighbourContainer.setMaximumSize(new java.awt.Dimension(250, 32767));
        neighbourContainer.setMinimumSize(new java.awt.Dimension(200, 100));
        neighbourContainer.setName("neighbourContainer"); // NOI18N
        neighbourContainer.setOpaque(true);
        neighbourContainer.setPreferredSize(new java.awt.Dimension(250, 100));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(neighbourContainer, gridBagConstraints);

        meterContainer.setBackground(new java.awt.Color(37, 75, 166));
        meterContainer.setMinimumSize(new java.awt.Dimension(600, 300));
        meterContainer.setName("meterContainer"); // NOI18N
        meterContainer.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(meterContainer, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private hidrocon.custom.panel.HidroPanel meterContainer;
    private hidrocon.custom.panel.HidroPanel neighbourContainer;
    // End of variables declaration//GEN-END:variables
}
