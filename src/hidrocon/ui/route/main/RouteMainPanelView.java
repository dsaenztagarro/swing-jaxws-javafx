/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RouteMainPanelView.java
 *
 * Created on 17-sep-2011, 5:03:08
 */

package hidrocon.ui.route.main;

import hidrocon.HidroconView;
import hidrocon.custom.button.toolbar.HidroDeleteButton;
import hidrocon.custom.button.toolbar.HidroNewButton;
import hidrocon.custom.button.toolbar.HidroPrintButton;
import hidrocon.core.database.route.entities.RouteView;
import hidrocon.core.database.route.manager.RouteManager;

import hidrocon.core.pattern.mvc.HidroController;
import hidrocon.core.utils.ActionKey;
import hidrocon.custom.button.toolbar.HidroInfoButton;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import java.util.List;

/**
 *
 * @author david
 */
public class RouteMainPanelView extends hidrocon.custom.panel.HidroMainPanel {
    
    HidroPrintButton printRouteButton;
    HidroNewButton newRouteButton;
    HidroInfoButton updateRouteButton;
    HidroDeleteButton deleteRouteButton;
    
    /** Creates new form RouteMainPanelView */
    public RouteMainPanelView() {
        initComponents();
        //Toolbars
		initRouteTopPanel();
        //customizeComponents();
    }

	/*
	 * Toolbar Initialization
	 */
    
	private void initRouteTopPanel() {
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(HidroconView.class);
		topPanel.setTitle("  " + resourceMap.getString("route.toppanel.title"));
		
        printRouteButton = new HidroPrintButton();
		newRouteButton = new HidroNewButton();
		updateRouteButton = new HidroInfoButton();
		deleteRouteButton = new HidroDeleteButton();
        
        printRouteButton.setToolTipText(resourceMap.getString("route.toolbar.printbutton.tooltip"));
		newRouteButton.setToolTipText(resourceMap.getString("route.toolbar.newbutton.tooltip"));
		updateRouteButton.setToolTipText(resourceMap.getString("route.toolbar.editbutton.tooltip"));
		deleteRouteButton.setToolTipText(resourceMap.getString("route.toolbar.deletebutton.tooltip"));
		
        topPanel.addButton(printRouteButton);
		topPanel.addButton(newRouteButton);
		topPanel.addButton(updateRouteButton);
		topPanel.addButton(deleteRouteButton);
	}

	public void refreshRouteList(List newList) {
		//java.util.List auxList = new java.util.ArrayList();
		//auxList.addAll(routeList);
		routeList.clear();
		routeList.addAll(newList);
	}    
    
    public RouteView getRouteSelected() {
		if (routeTable.getSelectedRow() > -1) {
			return routeList.get(routeTable.convertRowIndexToModel(routeTable.getSelectedRow()));
        }
        return null;
    }
           
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        RouteManager routeManager = new RouteManager();
        routeList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(routeManager.getAllRoute());
        topPanel = new hidrocon.custom.panel.HidroTopPanel();
        mainPanel = new hidrocon.custom.panel.HidroPanel();
        routeScrollPane = new javax.swing.JScrollPane();
        routeTable = new hidrocon.custom.table.HidroTable();
        leftFiller = new javax.swing.Box.Filler(new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 32767));
        rightFiller = new javax.swing.Box.Filler(new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 32767));
        bottomFiller = new javax.swing.Box.Filler(new java.awt.Dimension(0, 25), new java.awt.Dimension(0, 25), new java.awt.Dimension(32767, 25));
        topFiller = new javax.swing.Box.Filler(new java.awt.Dimension(0, 25), new java.awt.Dimension(0, 25), new java.awt.Dimension(32767, 20));

        setBorder(null);
        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        topPanel.setName("topPanel"); // NOI18N
        add(topPanel, java.awt.BorderLayout.PAGE_START);

        mainPanel.setMinimumSize(new java.awt.Dimension(600, 600));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(600, 600));
        mainPanel.setLayout(new java.awt.GridBagLayout());

        routeScrollPane.setName("routeScrollPane"); // NOI18N

        routeTable.setName("routeTable"); // NOI18N

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, routeList, routeTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${routeName}"));
        columnBinding.setColumnName("Route Name");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numberReadingsPerYear}"));
        columnBinding.setColumnName("Number Readings Per Year");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${lastReadingDate}"));
        columnBinding.setColumnName("Last Reading Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nextReadingDate}"));
        columnBinding.setColumnName("Next Reading Date");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        routeScrollPane.setViewportView(routeTable);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(RouteMainPanelView.class);
        routeTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        routeTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("routeTable.columnModel.title0")); // NOI18N
        routeTable.getColumnModel().getColumn(1).setMinWidth(120);
        routeTable.getColumnModel().getColumn(1).setMaxWidth(120);
        routeTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("routeTable.columnModel.title1")); // NOI18N
        routeTable.getColumnModel().getColumn(2).setMinWidth(120);
        routeTable.getColumnModel().getColumn(2).setMaxWidth(120);
        routeTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("routeTable.columnModel.title3")); // NOI18N
        routeTable.getColumnModel().getColumn(3).setMinWidth(120);
        routeTable.getColumnModel().getColumn(3).setMaxWidth(120);
        routeTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("routeTable.columnModel.title2")); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(routeScrollPane, gridBagConstraints);

        leftFiller.setName("leftFiller"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        mainPanel.add(leftFiller, gridBagConstraints);

        rightFiller.setName("rightFiller"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        mainPanel.add(rightFiller, gridBagConstraints);

        bottomFiller.setName("bottomFiller"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        mainPanel.add(bottomFiller, gridBagConstraints);

        topFiller.setName("topFiller"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        mainPanel.add(topFiller, gridBagConstraints);

        add(mainPanel, java.awt.BorderLayout.CENTER);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler bottomFiller;
    private javax.swing.Box.Filler leftFiller;
    private hidrocon.custom.panel.HidroPanel mainPanel;
    private javax.swing.Box.Filler rightFiller;
    private java.util.List<RouteView> routeList;
    private javax.swing.JScrollPane routeScrollPane;
    private hidrocon.custom.table.HidroTable routeTable;
    private javax.swing.Box.Filler topFiller;
    private hidrocon.custom.panel.HidroTopPanel topPanel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

	protected PropertyChangeSupport propertyChangeSupport = new PropertyChangeSupport(this);

    @Override
	public void addPropertyChangeListener(PropertyChangeListener l) {
		propertyChangeSupport.addPropertyChangeListener(l);
	}

    @Override
	public void removePropertyChangeListener(PropertyChangeListener l) {
		propertyChangeSupport.removePropertyChangeListener(l);
	}    

    public void addController(HidroController controller) {
        printRouteButton.setActionCommand(ActionKey.ROUTE_PRINT);
		printRouteButton.addActionListener(controller);
		newRouteButton.setActionCommand(ActionKey.ROUTE_CREATE);
        newRouteButton.addActionListener(controller);
        updateRouteButton.setActionCommand(ActionKey.ROUTE_UPDATE);
		updateRouteButton.addActionListener(controller);
        deleteRouteButton.setActionCommand(ActionKey.ROUTE_DELETE);
		deleteRouteButton.addActionListener(controller);
        
        routeTable.getSelectionModel().addListSelectionListener(controller);
    }
    
}
