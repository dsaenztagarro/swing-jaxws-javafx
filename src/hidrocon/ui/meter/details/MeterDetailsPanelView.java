/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MeterDetailsPanelView.java
 *
 * Created on 06-dic-2011, 5:16:34
 */
package hidrocon.ui.meter.details;

import hidrocon.HidroconView;
import hidrocon.core.database.meter.entities.Meter;
import hidrocon.core.database.metertype.entities.MeterType;
import hidrocon.core.pattern.mvc.HidroController;
import hidrocon.core.utils.ActionKey;
import hidrocon.custom.Constant;
import hidrocon.custom.button.toolbar.HidroEditButton;
import hidrocon.custom.button.toolbar.HidroExitButton;
import hidrocon.custom.button.toolbar.HidroSaveButton;
import javax.swing.JPanel;

/**
 *
 * @author David SÃ¡enz Tagarro
 */
public class MeterDetailsPanelView extends javax.swing.JPanel {

    public static String FIELD_SERIAL_NUMBER = "serialNumberField";
    public static String FIELD_READING_DATE = "readingDateField";
    public static String FIELD_REGISTERED_VALUE = "registeredValueField";
    
    private int mode;
    
    HidroEditButton editButton;
    HidroSaveButton saveButton;
    HidroExitButton exitButton;
    
    /** Creates new form MeterDetailsPanelView */
    public MeterDetailsPanelView() {
        initComponents();
        initTopPanel();
        enableAllFields(true);
    }
    
	private void initTopPanel() {
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(HidroconView.class);
		topPanel.setTitle("  " + resourceMap.getString("metercreation.step2.toppanel.title"));
		
        editButton = new HidroEditButton();
		saveButton = new HidroSaveButton();
		exitButton = new HidroExitButton();
        		
		editButton.setToolTipText(resourceMap.getString("meter.details.toolbar.editbutton.tooltip"));
        saveButton.setToolTipText(resourceMap.getString("meter.details.toolbar.savebutton.tooltip"));
		exitButton.setToolTipText(resourceMap.getString("meter.details.toolbar.exitbutton.tooltip"));

		topPanel.addButton(saveButton);
        topPanel.addButton(exitButton);     
	}
    
    public void writeData(MeterType meterType) {
        meterTypeField.setText(meterType.getMeterTypeName());
    }
    
    public void writeData(Meter meter) {

    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        topPanel = new hidrocon.custom.panel.HidroTopPanel();
        mainPanel = new hidrocon.custom.panel.HidroMainPanel();
        detailsPanel = new hidrocon.custom.panel.HidroPanel();
        meterTypeLabel = new hidrocon.custom.label.HidroLabel();
        serialNumberLabel = new hidrocon.custom.label.HidroLabel();
        serialNumberField = new hidrocon.custom.field.HidroTextField();
        readingDateLabel = new hidrocon.custom.label.HidroLabel();
        registeredValueLabel = new hidrocon.custom.label.HidroLabel();
        registeredValueField = new hidrocon.custom.field.HidroIntegerField();
        readingDateField = new hidrocon.custom.field.HidroDateField();
        rightGridFiller = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        bottomGridFiller = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        meterTypeField = new hidrocon.custom.field.HidroTextField();
        leftFiller = new javax.swing.Box.Filler(new java.awt.Dimension(25, 25), new java.awt.Dimension(25, 25), new java.awt.Dimension(25, 32767));
        rightFiller = new javax.swing.Box.Filler(new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 32767));
        bottomFiller = new javax.swing.Box.Filler(new java.awt.Dimension(0, 25), new java.awt.Dimension(0, 25), new java.awt.Dimension(32767, 25));
        topFiller = new javax.swing.Box.Filler(new java.awt.Dimension(0, 25), new java.awt.Dimension(0, 25), new java.awt.Dimension(32767, 25));

        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        topPanel.setMaximumSize(new java.awt.Dimension(580, 35));
        topPanel.setName("topPanel"); // NOI18N
        add(topPanel, java.awt.BorderLayout.PAGE_START);

        mainPanel.setMaximumSize(new java.awt.Dimension(600, 600));
        mainPanel.setMinimumSize(new java.awt.Dimension(600, 650));
        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setPreferredSize(new java.awt.Dimension(600, 600));
        mainPanel.setLayout(new java.awt.BorderLayout());

        detailsPanel.setName("detailsPanel"); // NOI18N
        detailsPanel.setLayout(new java.awt.GridBagLayout());

        meterTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(MeterDetailsPanelView.class);
        meterTypeLabel.setText(resourceMap.getString("meterTypeLabel.text")); // NOI18N
        meterTypeLabel.setName("meterTypeLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        detailsPanel.add(meterTypeLabel, gridBagConstraints);

        serialNumberLabel.setText(resourceMap.getString("serialNumberLabel.text")); // NOI18N
        serialNumberLabel.setName("serialNumberLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 0, 0);
        detailsPanel.add(serialNumberLabel, gridBagConstraints);

        serialNumberField.setName("serialNumberField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        detailsPanel.add(serialNumberField, gridBagConstraints);

        readingDateLabel.setText(resourceMap.getString("readingDateLabel.text")); // NOI18N
        readingDateLabel.setName("readingDateLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 0, 0);
        detailsPanel.add(readingDateLabel, gridBagConstraints);

        registeredValueLabel.setText(resourceMap.getString("registeredValueLabel.text")); // NOI18N
        registeredValueLabel.setName("registeredValueLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 0, 0, 0);
        detailsPanel.add(registeredValueLabel, gridBagConstraints);

        registeredValueField.setName("registeredValueField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 75;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        detailsPanel.add(registeredValueField, gridBagConstraints);

        readingDateField.setName("readingDateField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 75;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        detailsPanel.add(readingDateField, gridBagConstraints);

        rightGridFiller.setName("rightGridFiller"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        detailsPanel.add(rightGridFiller, gridBagConstraints);

        bottomGridFiller.setName("bottomGridFiller"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        detailsPanel.add(bottomGridFiller, gridBagConstraints);

        meterTypeField.setName("meterTypeField"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        detailsPanel.add(meterTypeField, gridBagConstraints);

        mainPanel.add(detailsPanel, java.awt.BorderLayout.CENTER);

        leftFiller.setName("leftFiller"); // NOI18N
        mainPanel.add(leftFiller, java.awt.BorderLayout.WEST);

        rightFiller.setName("rightFiller"); // NOI18N
        mainPanel.add(rightFiller, java.awt.BorderLayout.EAST);

        bottomFiller.setName("bottomFiller"); // NOI18N
        mainPanel.add(bottomFiller, java.awt.BorderLayout.SOUTH);

        topFiller.setName("topFiller"); // NOI18N
        mainPanel.add(topFiller, java.awt.BorderLayout.NORTH);

        add(mainPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler bottomFiller;
    private javax.swing.Box.Filler bottomGridFiller;
    private hidrocon.custom.panel.HidroPanel detailsPanel;
    private javax.swing.Box.Filler leftFiller;
    private hidrocon.custom.panel.HidroMainPanel mainPanel;
    private hidrocon.custom.field.HidroTextField meterTypeField;
    private hidrocon.custom.label.HidroLabel meterTypeLabel;
    private hidrocon.custom.field.HidroDateField readingDateField;
    private hidrocon.custom.label.HidroLabel readingDateLabel;
    private hidrocon.custom.field.HidroIntegerField registeredValueField;
    private hidrocon.custom.label.HidroLabel registeredValueLabel;
    private javax.swing.Box.Filler rightFiller;
    private javax.swing.Box.Filler rightGridFiller;
    private hidrocon.custom.field.HidroTextField serialNumberField;
    private hidrocon.custom.label.HidroLabel serialNumberLabel;
    private javax.swing.Box.Filler topFiller;
    private hidrocon.custom.panel.HidroTopPanel topPanel;
    // End of variables declaration//GEN-END:variables

    public void addController(HidroController controller) {
        serialNumberField.addPropertyChangeListener("value", controller);
        readingDateField.addPropertyChangeListener("value", controller);
        registeredValueField.addPropertyChangeListener("value", controller);
        
        editButton.setActionCommand(ActionKey.METER_DETAILS_EDIT);
		editButton.addActionListener(controller);        
        saveButton.setActionCommand(ActionKey.METER_DETAILS_SAVE);
		saveButton.addActionListener(controller);        
        exitButton.setActionCommand(ActionKey.METER_DETAILS_CLOSE);
		exitButton.addActionListener(controller);        
    }
    
    public JPanel getMainPanel() {
        return mainPanel;
    }
    
    public void setMode(int mode) {
        this.mode = mode;
        if (this.mode == Constant.VIEW_MODE_CREATION) {
            enableAllFields(true);
            serialNumberField.requestFocusInWindow();
        }
        else if (this.mode == Constant.VIEW_MODE_READONLY) {
            enableAllFields(false);
        }   
        else if (this.mode == Constant.VIEW_MODE_UPDATE) {
            enableAllFields(true);
            serialNumberField.requestFocusInWindow();
        }        
        else if (this.mode == Constant.ENTITY_MANAGEMENT_MODE_SUMMARY) {
            enableAllFields(false);
        }
        
        showButtons();
    }
    
    protected void showButtons() {
        if (mode == Constant.VIEW_MODE_CREATION) {
            editButton.setVisible(false);
            saveButton.setVisible(true);
        }
        else if (mode == Constant.ENTITY_MANAGEMENT_MODE_SUMMARY) {
            editButton.setVisible(false);
            saveButton.setVisible(false);
        }
        else if (mode == Constant.VIEW_MODE_READONLY ) {
            editButton.setVisible(true);
            saveButton.setVisible(false);
        }        
        else if (mode == Constant.VIEW_MODE_UPDATE ) {
            editButton.setVisible(false);
            saveButton.setVisible(true);
        }                
    }
    
    protected void enableAllFields(boolean enabled) {
        serialNumberField.setEditable(enabled);
        readingDateField.setEditable(enabled);
        registeredValueField.setEditable(enabled);
    }
}
