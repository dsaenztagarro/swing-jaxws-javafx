/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CommentDetailsView.java
 *
 * Created on 07-dic-2011, 0:20:45
 */
package hidrocon.ui.comment.panels.details;

import hidrocon.HidroconView;
import hidrocon.core.utils.ActionKey;
import hidrocon.custom.Constant;
import hidrocon.custom.button.toolbar.HidroEditButton;
import hidrocon.custom.button.toolbar.HidroExitButton;
import hidrocon.custom.button.toolbar.HidroSaveButton;
import hidrocon.custom.panel.HidroMainPanel;
import hidrocon.webservice.Comment;
import java.awt.event.ActionListener;

/**
 *
 * @author David SÃ¡enz Tagarro
 */
public class CommentDetailsView extends HidroMainPanel {

    private int mode;
    
    private HidroEditButton editButton;
    private HidroSaveButton saveButton;
    private HidroExitButton exitButton;
    
    /** Creates new form CommentDetailsView */
    public CommentDetailsView() {
        initComponents();
        initTopPanel();
    }
    
	protected void initTopPanel() {
		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(HidroconView.class);
		topPanel.setTitle("  " + resourceMap.getString("comment.details.toppanel.title"));

        editButton = new HidroEditButton();
		saveButton = new HidroSaveButton();
        exitButton = new HidroExitButton();
        
        saveButton.setToolTipText(resourceMap.getString("comment.toolbar.editbutton.tooltip"));
		saveButton.setToolTipText(resourceMap.getString("comment.toolbar.savebutton.tooltip"));
        exitButton.setToolTipText(resourceMap.getString("comment.toolbar.exitbutton.tooltip"));

        topPanel.addButton(editButton);
		topPanel.addButton(saveButton);
        topPanel.addButton(exitButton);
	}
    
    public void setMode(int mode) {
        this.mode = mode;
        if (this.mode == Constant.VIEW_MODE_CREATION) {
            enableAllFields(true);
        }
        else if (this.mode == Constant.VIEW_MODE_READONLY) {
            enableAllFields(false);
        }   
        else if (this.mode == Constant.VIEW_MODE_UPDATE) {
            enableAllFields(true);
            commentTextField.requestFocusInWindow();
        }        
        else if (this.mode == Constant.ENTITY_MANAGEMENT_MODE_SUMMARY) {
            enableAllFields(false);
        }
        
        showButtons();
    }
    
    protected void showButtons() {
        if (mode == Constant.VIEW_MODE_CREATION) {
            editButton.setVisible(false);
            saveButton.setVisible(true);
        }
        else if (mode == Constant.ENTITY_MANAGEMENT_MODE_SUMMARY) {
            editButton.setVisible(false);
            saveButton.setVisible(false);
        }
        else if (mode == Constant.VIEW_MODE_READONLY ) {
            editButton.setVisible(true);
            saveButton.setVisible(false);
        }        
        else if (mode == Constant.VIEW_MODE_UPDATE ) {
            editButton.setVisible(false);
            saveButton.setVisible(true);
        }                
    }

    public void enableAllFields(boolean enabled) {
        commentNumberField.setEditable(enabled);
        commentTextField.setEditable(enabled);
    }
    
    public void writeData(Comment comment) {
        commentNumberField.setValue(comment.getCommentNumber());
        commentTextField.setText(comment.getCommentText());
    }
    
    public void readData(Comment comment) {
        comment.setCommentNumber(commentNumberField.getValue());
        comment.setCommentText(commentTextField.getText());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new hidrocon.custom.panel.HidroTopPanel();
        mainPanel = new hidrocon.custom.panel.HidroMainPanel();
        commentNumberLabel = new hidrocon.custom.label.HidroLabel();
        commentTextLabel = new hidrocon.custom.label.HidroLabel();
        commentNumberField = new hidrocon.custom.field.HidroIntegerField();
        commentTextScrollPane = new javax.swing.JScrollPane();
        commentTextField = new hidrocon.custom.field.HidroTextArea();

        setMinimumSize(new java.awt.Dimension(100, 100));
        setName("Form"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        topPanel.setName("topPanel"); // NOI18N
        add(topPanel, java.awt.BorderLayout.PAGE_START);

        mainPanel.setName("mainPanel"); // NOI18N
        mainPanel.setOpaque(false);
        mainPanel.setPreferredSize(new java.awt.Dimension(475, 180));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(hidrocon.HidroconApp.class).getContext().getResourceMap(CommentDetailsView.class);
        commentNumberLabel.setText(resourceMap.getString("commentNumberLabel.text")); // NOI18N
        commentNumberLabel.setName("commentNumberLabel"); // NOI18N

        commentTextLabel.setText(resourceMap.getString("commentTextLabel.text")); // NOI18N
        commentTextLabel.setName("commentTextLabel"); // NOI18N

        commentNumberField.setName("commentNumberField"); // NOI18N

        commentTextScrollPane.setBorder(null);
        commentTextScrollPane.setName("commentTextScrollPane"); // NOI18N

        commentTextField.setColumns(20);
        commentTextField.setLineWrap(true);
        commentTextField.setName("commentTextField"); // NOI18N
        commentTextScrollPane.setViewportView(commentTextField);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(commentTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commentNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(commentNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commentTextScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commentNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commentNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(commentTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commentTextScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(mainPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private hidrocon.custom.field.HidroIntegerField commentNumberField;
    private hidrocon.custom.label.HidroLabel commentNumberLabel;
    private hidrocon.custom.field.HidroTextArea commentTextField;
    private hidrocon.custom.label.HidroLabel commentTextLabel;
    private javax.swing.JScrollPane commentTextScrollPane;
    private hidrocon.custom.panel.HidroMainPanel mainPanel;
    private hidrocon.custom.panel.HidroTopPanel topPanel;
    // End of variables declaration//GEN-END:variables

    public void buttonActionListeners(ActionListener al) {
        editButton.setActionCommand(ActionKey.COMMENT_DETAILS_EDIT);
		editButton.addActionListener(al);
        saveButton.setActionCommand(ActionKey.COMMENT_DETAILS_SAVE);
        saveButton.addActionListener(al);        
		exitButton.setActionCommand(ActionKey.COMMENT_DETAILS_CLOSE);
        exitButton.addActionListener(al);
    }
    
}
